# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
import random
def array_filling(a, list):
    for i in range(a):
        list.append(random.randint(1, 10))
    return list   
def array_sort(my_list_1, my_list_2):
    result = []
    for i in range(len(my_list_1)):
        if my_list_1[i] not in my_list_2:
            result.append(my_list_1[i])
    return result

def min_around_num(list):
    count = 0
    for i in range(1,(len(list_1) - 1)):
        if list[i] > list[i -1] and list[i] > list[i+1]:
            count= count + 1
    return count  

n1 = int(input("Введите размер первого массива: "))
n2 = int(input("Введите размер второго массива: "))
list_1 = []
list_2 = []
print(array_filling(n1, list_1))
print(array_filling(n2, list_2))
print(*array_sort(list_1, list_2))


# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.

n3  = int(input("Введите размер массива: "))
list_3 = []
print(array_filling(n3, list_3))

print(f"Количество элементов соответствущих условию : {min_around_num(list_3)}")

# Задача №43. Общее обсуждение
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:        Вывод:
# 1 2 3 2 3      2

n4 = int(input("Введите размер массива: "))
list_4 = []
print(array_filling(n4, list_4))

# Задача №45. Общее обсуждение
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300 220 284

k = int(input("Введите число в рамках которого происходит поиск: "))
s = []
for i in range (1,k):
    sum1 = 0
    for j in range(1, i//2 + 1):
        if i%j == 0:
            sum1 += j
    s.append([i,sum1])    
print(s)  
for l in range(len(s)):
    for a in range(l, len(s)):
        if l != a and s[a][0] == s[l][1] and s[a][1] == s[l][0]:
            print(s[a])
'''
Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников.
Теперь он использует их в качестве серверов "Пегого дудочника".
Помогите владельцу фирмы отыскать все зараженные холодильники.

Для каждого холодильника существует строка с данными,
состоящая из строчных букв и цифр, и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы,
главное наличие последовательности букв), то холодильник заражен и нужно вывести номер холодильника,
нумерация начинается с единицы

Формат входных данных
В первой строке подаётся число
n
n – количество холодильников. 
В последующих n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от
5 до 100 символов.
Формат выходных данных
Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет,
ничего выводить не нужно.

Sample Input 1:
6
222anton456
a1n1t1o1n1
0000a0000n00t00000o000000n
gylfole
richard
ant0n
Sample Output 1:
1 2 3
Sample Input 2:
9
osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
anton
aoooooooooontooooo
elelelelelelelelelel
ntoneeee
tonee
253235235a5323352n25235352t253523523235oo235523523523n
antoooooooooooooooooooooooooooooooooooooooooooooooooooon
unton
Sample Output 2:
1 2 7 8             
              '''
n = int(input("Введите число холодильников : "))
s = []
for i in range(n):
    s.append(input("инфа холодоса для поиска "))
print(s)  
anton = "anton"
                        

def letters_only(source):
    result = ""
    for j in range(len(source)):
        for i in source[j].lower():
            if i in anton:
                result += i
        return result

print(letters_only(s))                        